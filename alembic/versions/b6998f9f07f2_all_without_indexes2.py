"""all without indexes2

Revision ID: b6998f9f07f2
Revises: 33292213c4b2
Create Date: 2025-03-09 13:50:37.659577

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b6998f9f07f2'
down_revision: Union[str, None] = '33292213c4b2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('DemoExams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('FilePath', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('Name'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Exams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('Date', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('Name'),
    sa.UniqueConstraint('id')
    )
    op.create_table('MessageTexts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Text', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('MessageTitles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Title', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Parents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('Surname', sa.String(), nullable=False),
    sa.Column('Phone', sa.String(), nullable=False),
    sa.Column('Email', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('Name'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Role', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('Role'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ProfileId', sa.Integer(), nullable=False),
    sa.Column('Number', sa.Integer(), nullable=False),
    sa.Column('Letter', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['ProfileId'], ['Profiles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Subexams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('ExamId', sa.Integer(), nullable=False),
    sa.Column('NumberOfSubexam', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ExamId'], ['Exams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Phone', sa.String(), nullable=False),
    sa.Column('LastSchool', sa.String(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('Surname', sa.String(), nullable=False),
    sa.Column('Email', sa.String(), nullable=False),
    sa.Column('ParentId', sa.Integer(), nullable=False),
    sa.Column('RoleId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ParentId'], ['Parents.id'], ),
    sa.ForeignKeyConstraint(['RoleId'], ['Roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('Phone'),
    sa.UniqueConstraint('id')
    )
    op.create_table('AdditionalInformation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('UserId', sa.Integer(), nullable=False),
    sa.Column('n', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['UserId'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('ExamsList',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ClassId', sa.Integer(), nullable=False),
    sa.Column('ExamId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ClassId'], ['Classes.id'], ),
    sa.ForeignKeyConstraint(['ExamId'], ['Exams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('MarksList',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('UserId', sa.Integer(), nullable=False),
    sa.Column('SubexamId', sa.Integer(), nullable=False),
    sa.Column('Date', sa.Date(), nullable=False),
    sa.Column('Mark', sa.Numeric(), nullable=False),
    sa.ForeignKeyConstraint(['SubexamId'], ['Subexams.id'], ),
    sa.ForeignKeyConstraint(['UserId'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('UserId', sa.Integer(), nullable=False),
    sa.Column('TitleId', sa.Integer(), nullable=False),
    sa.Column('TextId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['TextId'], ['MessageTexts.id'], ),
    sa.ForeignKeyConstraint(['TitleId'], ['MessageTitles.id'], ),
    sa.ForeignKeyConstraint(['UserId'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('StudentsList',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('UserId', sa.Integer(), nullable=False),
    sa.Column('ClassId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ClassId'], ['Classes.id'], ),
    sa.ForeignKeyConstraint(['UserId'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('UserClasses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ClassId', sa.Integer(), nullable=False),
    sa.Column('UserId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ClassId'], ['Classes.id'], ),
    sa.ForeignKeyConstraint(['UserId'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('MarkId', sa.Integer(), nullable=False),
    sa.Column('Comment', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['MarkId'], ['MarksList.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Comments')
    op.drop_table('UserClasses')
    op.drop_table('StudentsList')
    op.drop_table('Messages')
    op.drop_table('MarksList')
    op.drop_table('ExamsList')
    op.drop_table('AdditionalInformation')
    op.drop_table('Users')
    op.drop_table('Subexams')
    op.drop_table('Classes')
    op.drop_table('Roles')
    op.drop_table('Profiles')
    op.drop_table('Parents')
    op.drop_table('MessageTitles')
    op.drop_table('MessageTexts')
    op.drop_table('Exams')
    op.drop_table('DemoExams')
    # ### end Alembic commands ###
